version: '3'

services:
  # Database service using MySQL
  mysql:
    image: 'mysql/mysql-server:8.0'
    platform: 'linux/x86_64'
    container_name: mysql
    # restart: unless-stopped
    command: '--default-authentication-plugin=mysql_native_password'
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: feelit_vlad_secrier_test_app_db
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_ROOT_PASSWORD: mysql
    expose:
      - "3306"
      - "33060"
    volumes:
      # - ./mysql-data:/var/lib/mysql
      - mysqldbvolume:/var/lib/mysql
      - ./docker/mysql/conf/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # Frontend service using React
  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - app-network

  # Backend service using Laravel
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      MYSQL_HOST: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: feelit_vlad_secrier_test_app_db
      DB_USERNAME: mysql
      DB_PASSWORD: mysql
    depends_on:
      - mysql
    # env_file:
    #   - .env
    volumes:
      - ./backend:/app
    networks:
      - app-network

  # Nginx Service
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx-conf:/etc/nginx/conf.d
  #   networks:
  #     - app-network
  #   depends_on:
  #     - mysql

volumes:
  mysqldbvolume:
    driver: local

networks:
  app-network:
    driver: bridge